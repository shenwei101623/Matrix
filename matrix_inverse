double **matrix_inverse(double **a, int n)
{
	int i, j, k;
	double **ans = new double*[n];
	for (i = 0; i < n; i++)
		ans[i] = new double[n];
	for (i = 0; i < n; i++)
		for (j = 0; j < n; j++)
			ans[i][j] = i == j ? 1 : 0;
	for (i = 0; i < n; i++)
	{
		k = i;
		for (j = i + 1; j < n; j++)
			if (abs(a[j][i]) > abs(a[k][i])) k = j;
		for (j = 0; j < n; j++)
		{
			swap(a[i][j], a[k][j]);
			swap(ans[i][j], ans[k][j]);
		}
		double temp = a[i][i];
		if (temp == 0) return NULL;
		for (j = 0; j < n; j++)
		{
			a[i][j] /= temp;
			ans[i][j] /= temp;
		}
		for (j = 0; j < n; j++)
		{
			if (j == i) continue;
			double temp = a[j][i];
			for (k = 0; k < n; k++)
			{
				a[j][k] -= temp * a[i][k];
				ans[j][k] -= temp * ans[i][k];
			}
		}
	}

	return ans;
}
